apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: integrationtestscenarios.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: IntegrationTestScenario
    listKind: IntegrationTestScenarioList
    plural: integrationtestscenarios
    singular: integrationtestscenario
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              bundle:
                description: Tekton Bundle where to find the pipeline
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              environment:
                description: Environment that will be utilized by the test pipeline
                properties:
                  name:
                    type: string
                  params:
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                required:
                - name
                - params
                - type
                type: object
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - value
                  type: object
                type: array
              pipeline:
                description: Release Tekton Pipeline to execute
                type: string
            required:
            - application
            - bundle
            - pipeline
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integration-service-leader-election-role
  namespace: integration-service
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-manager-for-integration
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - patch
  - get
  - list
  - create
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: integration-service-application-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-applicationsnapshot-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshots/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-applicationsnapshot-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshots/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-applicationsnapshotenvironmentbinding-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshotenvironmentbindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applicationsnapshotenvironmentbindings/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: integration-service-component-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-environment-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-integrationtestscenario-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-integrationtestscenario-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: integration-service-manager-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - pipelineRuns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - pipelineRuns/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - pipelineRuns/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-release-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-release-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-releaseplan-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-tekton-editor-role
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggers
  - triggertemplates
  verbs:
  - create
  - update
  - patch
  - delete
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - create
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - create
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grant-argocd
  namespace: integration-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: integration-service-leader-election-rolebinding
  namespace: integration-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: integration-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grant-argocd-crd-permissions-for-integration
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-manager-for-integration
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-application-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-application-viewer-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-applicationsnapshot-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-applicationsnapshot-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-applicationsnapshotenvironmentbinding-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-applicationsnapshotenvironmentbinding-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-component-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-component-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-environment-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-environment-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-integrationtestscenario-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-integrationtestscenario-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-manager-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-proxy-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-release-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-release-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-releaseplan-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-releaseplan-viewer-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-tekton-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-tekton-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f1944211.redhat.com
kind: ConfigMap
metadata:
  name: integration-service-manager-config
  namespace: integration-service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service-controller-manager-metrics-service
  namespace: integration-service
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: app-studio-default-workspace
  namespace: integration-service
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service-controller-manager
  namespace: integration-service
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/redhat-appstudio/integration-service:0513fd2ca46e6f5da8d72601cd9b9acb14273522
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: integration-service-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: pipelinesascode.tekton.dev/v1alpha1
kind: Repository
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: integration-service-pac
  namespace: integration-service
spec:
  url: https://github.com/redhat-appstudio/integration-service
